#![allow(non_snake_case, non_upper_case_globals)]
#![allow(non_camel_case_types)]
//! JPEG codec
//!
//! Used by: stm32f765, stm32f7x7, stm32f7x9

#[cfg(not(feature = "nosync"))]
pub use crate::stm32f7::peripherals::jpeg::Instance;
pub use crate::stm32f7::peripherals::jpeg::{RegisterBlock, ResetValues};
pub use crate::stm32f7::peripherals::jpeg::{
    CFR, CONFR0, CONFR1, CONFR2, CONFR3, CONFR4, CONFR5, CONFR6, CONFR7, CR, DHTMEM0, DHTMEM10,
    DHTMEM100, DHTMEM101, DHTMEM102, DHTMEM103, DHTMEM11, DHTMEM12, DHTMEM13, DHTMEM14, DHTMEM15,
    DHTMEM16, DHTMEM17, DHTMEM18, DHTMEM19, DHTMEM2, DHTMEM20, DHTMEM21, DHTMEM22, DHTMEM23,
    DHTMEM24, DHTMEM25, DHTMEM26, DHTMEM27, DHTMEM28, DHTMEM29, DHTMEM3, DHTMEM30, DHTMEM31,
    DHTMEM32, DHTMEM33, DHTMEM34, DHTMEM35, DHTMEM36, DHTMEM37, DHTMEM38, DHTMEM39, DHTMEM4,
    DHTMEM40, DHTMEM41, DHTMEM42, DHTMEM43, DHTMEM44, DHTMEM45, DHTMEM46, DHTMEM47, DHTMEM48,
    DHTMEM49, DHTMEM5, DHTMEM50, DHTMEM51, DHTMEM52, DHTMEM53, DHTMEM54, DHTMEM55, DHTMEM56,
    DHTMEM57, DHTMEM58, DHTMEM59, DHTMEM6, DHTMEM60, DHTMEM61, DHTMEM62, DHTMEM63, DHTMEM64,
    DHTMEM65, DHTMEM66, DHTMEM67, DHTMEM68, DHTMEM69, DHTMEM7, DHTMEM70, DHTMEM71, DHTMEM72,
    DHTMEM73, DHTMEM74, DHTMEM75, DHTMEM76, DHTMEM77, DHTMEM78, DHTMEM79, DHTMEM8, DHTMEM80,
    DHTMEM81, DHTMEM82, DHTMEM83, DHTMEM84, DHTMEM85, DHTMEM86, DHTMEM87, DHTMEM88, DHTMEM89,
    DHTMEM9, DHTMEM90, DHTMEM91, DHTMEM92, DHTMEM93, DHTMEM94, DHTMEM95, DHTMEM96, DHTMEM97,
    DHTMEM98, DHTMEM99, DIR, DOR, HUFFBASE0, HUFFBASE1, HUFFBASE10, HUFFBASE11, HUFFBASE12,
    HUFFBASE13, HUFFBASE14, HUFFBASE15, HUFFBASE16, HUFFBASE17, HUFFBASE18, HUFFBASE19, HUFFBASE2,
    HUFFBASE20, HUFFBASE21, HUFFBASE22, HUFFBASE23, HUFFBASE24, HUFFBASE25, HUFFBASE26, HUFFBASE27,
    HUFFBASE28, HUFFBASE29, HUFFBASE3, HUFFBASE30, HUFFBASE31, HUFFBASE4, HUFFBASE5, HUFFBASE6,
    HUFFBASE7, HUFFBASE8, HUFFBASE9, HUFFENC_AC00, HUFFENC_AC01, HUFFENC_AC010, HUFFENC_AC011,
    HUFFENC_AC012, HUFFENC_AC013, HUFFENC_AC014, HUFFENC_AC015, HUFFENC_AC016, HUFFENC_AC017,
    HUFFENC_AC018, HUFFENC_AC019, HUFFENC_AC02, HUFFENC_AC020, HUFFENC_AC021, HUFFENC_AC022,
    HUFFENC_AC023, HUFFENC_AC024, HUFFENC_AC025, HUFFENC_AC026, HUFFENC_AC027, HUFFENC_AC028,
    HUFFENC_AC029, HUFFENC_AC03, HUFFENC_AC030, HUFFENC_AC031, HUFFENC_AC032, HUFFENC_AC033,
    HUFFENC_AC034, HUFFENC_AC035, HUFFENC_AC036, HUFFENC_AC037, HUFFENC_AC038, HUFFENC_AC039,
    HUFFENC_AC04, HUFFENC_AC040, HUFFENC_AC041, HUFFENC_AC042, HUFFENC_AC043, HUFFENC_AC044,
    HUFFENC_AC045, HUFFENC_AC046, HUFFENC_AC047, HUFFENC_AC048, HUFFENC_AC049, HUFFENC_AC05,
    HUFFENC_AC050, HUFFENC_AC051, HUFFENC_AC052, HUFFENC_AC053, HUFFENC_AC054, HUFFENC_AC055,
    HUFFENC_AC056, HUFFENC_AC057, HUFFENC_AC058, HUFFENC_AC059, HUFFENC_AC06, HUFFENC_AC060,
    HUFFENC_AC061, HUFFENC_AC062, HUFFENC_AC063, HUFFENC_AC064, HUFFENC_AC065, HUFFENC_AC066,
    HUFFENC_AC067, HUFFENC_AC068, HUFFENC_AC069, HUFFENC_AC07, HUFFENC_AC070, HUFFENC_AC071,
    HUFFENC_AC072, HUFFENC_AC073, HUFFENC_AC074, HUFFENC_AC075, HUFFENC_AC076, HUFFENC_AC077,
    HUFFENC_AC078, HUFFENC_AC079, HUFFENC_AC08, HUFFENC_AC080, HUFFENC_AC081, HUFFENC_AC082,
    HUFFENC_AC083, HUFFENC_AC084, HUFFENC_AC085, HUFFENC_AC086, HUFFENC_AC087, HUFFENC_AC09,
    HUFFENC_AC10, HUFFENC_AC11, HUFFENC_AC110, HUFFENC_AC111, HUFFENC_AC112, HUFFENC_AC113,
    HUFFENC_AC114, HUFFENC_AC115, HUFFENC_AC116, HUFFENC_AC117, HUFFENC_AC118, HUFFENC_AC119,
    HUFFENC_AC12, HUFFENC_AC120, HUFFENC_AC121, HUFFENC_AC122, HUFFENC_AC123, HUFFENC_AC124,
    HUFFENC_AC125, HUFFENC_AC126, HUFFENC_AC127, HUFFENC_AC128, HUFFENC_AC129, HUFFENC_AC13,
    HUFFENC_AC130, HUFFENC_AC131, HUFFENC_AC132, HUFFENC_AC133, HUFFENC_AC134, HUFFENC_AC135,
    HUFFENC_AC136, HUFFENC_AC137, HUFFENC_AC138, HUFFENC_AC139, HUFFENC_AC14, HUFFENC_AC140,
    HUFFENC_AC141, HUFFENC_AC142, HUFFENC_AC143, HUFFENC_AC144, HUFFENC_AC145, HUFFENC_AC146,
    HUFFENC_AC147, HUFFENC_AC148, HUFFENC_AC149, HUFFENC_AC15, HUFFENC_AC150, HUFFENC_AC151,
    HUFFENC_AC152, HUFFENC_AC153, HUFFENC_AC154, HUFFENC_AC155, HUFFENC_AC156, HUFFENC_AC157,
    HUFFENC_AC158, HUFFENC_AC159, HUFFENC_AC16, HUFFENC_AC160, HUFFENC_AC161, HUFFENC_AC162,
    HUFFENC_AC163, HUFFENC_AC164, HUFFENC_AC165, HUFFENC_AC166, HUFFENC_AC167, HUFFENC_AC168,
    HUFFENC_AC169, HUFFENC_AC17, HUFFENC_AC170, HUFFENC_AC171, HUFFENC_AC172, HUFFENC_AC173,
    HUFFENC_AC174, HUFFENC_AC175, HUFFENC_AC176, HUFFENC_AC177, HUFFENC_AC178, HUFFENC_AC179,
    HUFFENC_AC18, HUFFENC_AC180, HUFFENC_AC181, HUFFENC_AC182, HUFFENC_AC183, HUFFENC_AC184,
    HUFFENC_AC185, HUFFENC_AC186, HUFFENC_AC187, HUFFENC_AC19, HUFFENC_DC00, HUFFENC_DC01,
    HUFFENC_DC02, HUFFENC_DC03, HUFFENC_DC04, HUFFENC_DC05, HUFFENC_DC06, HUFFENC_DC07,
    HUFFENC_DC10, HUFFENC_DC11, HUFFENC_DC12, HUFFENC_DC13, HUFFENC_DC14, HUFFENC_DC15,
    HUFFENC_DC16, HUFFENC_DC17, HUFFMIN0, HUFFMIN1, HUFFMIN10, HUFFMIN11, HUFFMIN12, HUFFMIN13,
    HUFFMIN14, HUFFMIN15, HUFFMIN2, HUFFMIN3, HUFFMIN4, HUFFMIN5, HUFFMIN6, HUFFMIN7, HUFFMIN8,
    HUFFMIN9, HUFFSYMB0, HUFFSYMB1, HUFFSYMB10, HUFFSYMB11, HUFFSYMB12, HUFFSYMB13, HUFFSYMB14,
    HUFFSYMB15, HUFFSYMB16, HUFFSYMB17, HUFFSYMB18, HUFFSYMB19, HUFFSYMB2, HUFFSYMB20, HUFFSYMB21,
    HUFFSYMB22, HUFFSYMB23, HUFFSYMB24, HUFFSYMB25, HUFFSYMB26, HUFFSYMB27, HUFFSYMB28, HUFFSYMB29,
    HUFFSYMB3, HUFFSYMB30, HUFFSYMB31, HUFFSYMB32, HUFFSYMB33, HUFFSYMB34, HUFFSYMB35, HUFFSYMB36,
    HUFFSYMB37, HUFFSYMB38, HUFFSYMB39, HUFFSYMB4, HUFFSYMB40, HUFFSYMB41, HUFFSYMB42, HUFFSYMB43,
    HUFFSYMB44, HUFFSYMB45, HUFFSYMB46, HUFFSYMB47, HUFFSYMB48, HUFFSYMB49, HUFFSYMB5, HUFFSYMB50,
    HUFFSYMB51, HUFFSYMB52, HUFFSYMB53, HUFFSYMB54, HUFFSYMB55, HUFFSYMB56, HUFFSYMB57, HUFFSYMB58,
    HUFFSYMB59, HUFFSYMB6, HUFFSYMB60, HUFFSYMB61, HUFFSYMB62, HUFFSYMB63, HUFFSYMB64, HUFFSYMB65,
    HUFFSYMB66, HUFFSYMB67, HUFFSYMB68, HUFFSYMB69, HUFFSYMB7, HUFFSYMB70, HUFFSYMB71, HUFFSYMB72,
    HUFFSYMB73, HUFFSYMB74, HUFFSYMB75, HUFFSYMB76, HUFFSYMB77, HUFFSYMB78, HUFFSYMB79, HUFFSYMB8,
    HUFFSYMB80, HUFFSYMB81, HUFFSYMB82, HUFFSYMB83, HUFFSYMB9, QMEM00, QMEM01, QMEM010, QMEM011,
    QMEM012, QMEM013, QMEM014, QMEM015, QMEM02, QMEM03, QMEM04, QMEM05, QMEM06, QMEM07, QMEM08,
    QMEM09, QMEM10, QMEM11, QMEM110, QMEM111, QMEM112, QMEM113, QMEM114, QMEM115, QMEM12, QMEM13,
    QMEM14, QMEM15, QMEM16, QMEM17, QMEM18, QMEM19, QMEM20, QMEM21, QMEM210, QMEM211, QMEM212,
    QMEM213, QMEM214, QMEM215, QMEM22, QMEM23, QMEM24, QMEM25, QMEM26, QMEM27, QMEM28, QMEM29,
    QMEM30, QMEM31, QMEM310, QMEM311, QMEM312, QMEM313, QMEM314, QMEM315, QMEM32, QMEM33, QMEM34,
    QMEM35, QMEM36, QMEM37, QMEM38, QMEM39, SR,
};

/// Access functions for the JPEG peripheral instance
pub mod JPEG {
    use super::ResetValues;

    #[cfg(not(feature = "nosync"))]
    use super::Instance;

    #[cfg(not(feature = "nosync"))]
    const INSTANCE: Instance = Instance {
        addr: 0x50051000,
        _marker: ::core::marker::PhantomData,
    };

    /// Reset values for each field in JPEG
    pub const reset: ResetValues = ResetValues {
        CONFR0: 0x00000000,
        CONFR1: 0x00000000,
        CONFR2: 0x00000000,
        CONFR3: 0x00000000,
        CONFR4: 0x00000000,
        CONFR5: 0x00000000,
        CONFR6: 0x00000000,
        CONFR7: 0x00000000,
        CR: 0x00000000,
        SR: 0x00000000,
        CFR: 0x00000000,
        DIR: 0x00000000,
        DOR: 0x00000000,
        QMEM00: 0x00000000,
        QMEM01: 0x00000000,
        QMEM02: 0x00000000,
        QMEM03: 0x00000000,
        QMEM04: 0x00000000,
        QMEM05: 0x00000000,
        QMEM06: 0x00000000,
        QMEM07: 0x00000000,
        QMEM08: 0x00000000,
        QMEM09: 0x00000000,
        QMEM010: 0x00000000,
        QMEM011: 0x00000000,
        QMEM012: 0x00000000,
        QMEM013: 0x00000000,
        QMEM014: 0x00000000,
        QMEM015: 0x00000000,
        QMEM10: 0x00000000,
        QMEM11: 0x00000000,
        QMEM12: 0x00000000,
        QMEM13: 0x00000000,
        QMEM14: 0x00000000,
        QMEM15: 0x00000000,
        QMEM16: 0x00000000,
        QMEM17: 0x00000000,
        QMEM18: 0x00000000,
        QMEM19: 0x00000000,
        QMEM110: 0x00000000,
        QMEM111: 0x00000000,
        QMEM112: 0x00000000,
        QMEM113: 0x00000000,
        QMEM114: 0x00000000,
        QMEM115: 0x00000000,
        QMEM20: 0x00000000,
        QMEM21: 0x00000000,
        QMEM22: 0x00000000,
        QMEM23: 0x00000000,
        QMEM24: 0x00000000,
        QMEM25: 0x00000000,
        QMEM26: 0x00000000,
        QMEM27: 0x00000000,
        QMEM28: 0x00000000,
        QMEM29: 0x00000000,
        QMEM210: 0x00000000,
        QMEM211: 0x00000000,
        QMEM212: 0x00000000,
        QMEM213: 0x00000000,
        QMEM214: 0x00000000,
        QMEM215: 0x00000000,
        QMEM30: 0x00000000,
        QMEM31: 0x00000000,
        QMEM32: 0x00000000,
        QMEM33: 0x00000000,
        QMEM34: 0x00000000,
        QMEM35: 0x00000000,
        QMEM36: 0x00000000,
        QMEM37: 0x00000000,
        QMEM38: 0x00000000,
        QMEM39: 0x00000000,
        QMEM310: 0x00000000,
        QMEM311: 0x00000000,
        QMEM312: 0x00000000,
        QMEM313: 0x00000000,
        QMEM314: 0x00000000,
        QMEM315: 0x00000000,
        HUFFMIN0: 0x00000000,
        HUFFMIN1: 0x00000000,
        HUFFMIN2: 0x00000000,
        HUFFMIN3: 0x00000000,
        HUFFMIN4: 0x00000000,
        HUFFMIN5: 0x00000000,
        HUFFMIN6: 0x00000000,
        HUFFMIN7: 0x00000000,
        HUFFMIN8: 0x00000000,
        HUFFMIN9: 0x00000000,
        HUFFMIN10: 0x00000000,
        HUFFMIN11: 0x00000000,
        HUFFMIN12: 0x00000000,
        HUFFMIN13: 0x00000000,
        HUFFMIN14: 0x00000000,
        HUFFMIN15: 0x00000000,
        HUFFBASE0: 0x00000000,
        HUFFBASE1: 0x00000000,
        HUFFBASE2: 0x00000000,
        HUFFBASE3: 0x00000000,
        HUFFBASE4: 0x00000000,
        HUFFBASE5: 0x00000000,
        HUFFBASE6: 0x00000000,
        HUFFBASE7: 0x00000000,
        HUFFBASE8: 0x00000000,
        HUFFBASE9: 0x00000000,
        HUFFBASE10: 0x00000000,
        HUFFBASE11: 0x00000000,
        HUFFBASE12: 0x00000000,
        HUFFBASE13: 0x00000000,
        HUFFBASE14: 0x00000000,
        HUFFBASE15: 0x00000000,
        HUFFBASE16: 0x00000000,
        HUFFBASE17: 0x00000000,
        HUFFBASE18: 0x00000000,
        HUFFBASE19: 0x00000000,
        HUFFBASE20: 0x00000000,
        HUFFBASE21: 0x00000000,
        HUFFBASE22: 0x00000000,
        HUFFBASE23: 0x00000000,
        HUFFBASE24: 0x00000000,
        HUFFBASE25: 0x00000000,
        HUFFBASE26: 0x00000000,
        HUFFBASE27: 0x00000000,
        HUFFBASE28: 0x00000000,
        HUFFBASE29: 0x00000000,
        HUFFBASE30: 0x00000000,
        HUFFBASE31: 0x00000000,
        HUFFSYMB0: 0x00000000,
        HUFFSYMB1: 0x00000000,
        HUFFSYMB2: 0x00000000,
        HUFFSYMB3: 0x00000000,
        HUFFSYMB4: 0x00000000,
        HUFFSYMB5: 0x00000000,
        HUFFSYMB6: 0x00000000,
        HUFFSYMB7: 0x00000000,
        HUFFSYMB8: 0x00000000,
        HUFFSYMB9: 0x00000000,
        HUFFSYMB10: 0x00000000,
        HUFFSYMB11: 0x00000000,
        HUFFSYMB12: 0x00000000,
        HUFFSYMB13: 0x00000000,
        HUFFSYMB14: 0x00000000,
        HUFFSYMB15: 0x00000000,
        HUFFSYMB16: 0x00000000,
        HUFFSYMB17: 0x00000000,
        HUFFSYMB18: 0x00000000,
        HUFFSYMB19: 0x00000000,
        HUFFSYMB20: 0x00000000,
        HUFFSYMB21: 0x00000000,
        HUFFSYMB22: 0x00000000,
        HUFFSYMB23: 0x00000000,
        HUFFSYMB24: 0x00000000,
        HUFFSYMB25: 0x00000000,
        HUFFSYMB26: 0x00000000,
        HUFFSYMB27: 0x00000000,
        HUFFSYMB28: 0x00000000,
        HUFFSYMB29: 0x00000000,
        HUFFSYMB30: 0x00000000,
        HUFFSYMB31: 0x00000000,
        HUFFSYMB32: 0x00000000,
        HUFFSYMB33: 0x00000000,
        HUFFSYMB34: 0x00000000,
        HUFFSYMB35: 0x00000000,
        HUFFSYMB36: 0x00000000,
        HUFFSYMB37: 0x00000000,
        HUFFSYMB38: 0x00000000,
        HUFFSYMB39: 0x00000000,
        HUFFSYMB40: 0x00000000,
        HUFFSYMB41: 0x00000000,
        HUFFSYMB42: 0x00000000,
        HUFFSYMB43: 0x00000000,
        HUFFSYMB44: 0x00000000,
        HUFFSYMB45: 0x00000000,
        HUFFSYMB46: 0x00000000,
        HUFFSYMB47: 0x00000000,
        HUFFSYMB48: 0x00000000,
        HUFFSYMB49: 0x00000000,
        HUFFSYMB50: 0x00000000,
        HUFFSYMB51: 0x00000000,
        HUFFSYMB52: 0x00000000,
        HUFFSYMB53: 0x00000000,
        HUFFSYMB54: 0x00000000,
        HUFFSYMB55: 0x00000000,
        HUFFSYMB56: 0x00000000,
        HUFFSYMB57: 0x00000000,
        HUFFSYMB58: 0x00000000,
        HUFFSYMB59: 0x00000000,
        HUFFSYMB60: 0x00000000,
        HUFFSYMB61: 0x00000000,
        HUFFSYMB62: 0x00000000,
        HUFFSYMB63: 0x00000000,
        HUFFSYMB64: 0x00000000,
        HUFFSYMB65: 0x00000000,
        HUFFSYMB66: 0x00000000,
        HUFFSYMB67: 0x00000000,
        HUFFSYMB68: 0x00000000,
        HUFFSYMB69: 0x00000000,
        HUFFSYMB70: 0x00000000,
        HUFFSYMB71: 0x00000000,
        HUFFSYMB72: 0x00000000,
        HUFFSYMB73: 0x00000000,
        HUFFSYMB74: 0x00000000,
        HUFFSYMB75: 0x00000000,
        HUFFSYMB76: 0x00000000,
        HUFFSYMB77: 0x00000000,
        HUFFSYMB78: 0x00000000,
        HUFFSYMB79: 0x00000000,
        HUFFSYMB80: 0x00000000,
        HUFFSYMB81: 0x00000000,
        HUFFSYMB82: 0x00000000,
        HUFFSYMB83: 0x00000000,
        DHTMEM0: 0x00000000,
        DHTMEM2: 0x00000000,
        DHTMEM3: 0x00000000,
        DHTMEM4: 0x00000000,
        DHTMEM5: 0x00000000,
        DHTMEM6: 0x00000000,
        DHTMEM7: 0x00000000,
        DHTMEM8: 0x00000000,
        DHTMEM9: 0x00000000,
        DHTMEM10: 0x00000000,
        DHTMEM11: 0x00000000,
        DHTMEM12: 0x00000000,
        DHTMEM13: 0x00000000,
        DHTMEM14: 0x00000000,
        DHTMEM15: 0x00000000,
        DHTMEM16: 0x00000000,
        DHTMEM17: 0x00000000,
        DHTMEM18: 0x00000000,
        DHTMEM19: 0x00000000,
        DHTMEM20: 0x00000000,
        DHTMEM21: 0x00000000,
        DHTMEM22: 0x00000000,
        DHTMEM23: 0x00000000,
        DHTMEM24: 0x00000000,
        DHTMEM25: 0x00000000,
        DHTMEM26: 0x00000000,
        DHTMEM27: 0x00000000,
        DHTMEM28: 0x00000000,
        DHTMEM29: 0x00000000,
        DHTMEM30: 0x00000000,
        DHTMEM31: 0x00000000,
        DHTMEM32: 0x00000000,
        DHTMEM33: 0x00000000,
        DHTMEM34: 0x00000000,
        DHTMEM35: 0x00000000,
        DHTMEM36: 0x00000000,
        DHTMEM37: 0x00000000,
        DHTMEM38: 0x00000000,
        DHTMEM39: 0x00000000,
        DHTMEM40: 0x00000000,
        DHTMEM41: 0x00000000,
        DHTMEM42: 0x00000000,
        DHTMEM43: 0x00000000,
        DHTMEM44: 0x00000000,
        DHTMEM45: 0x00000000,
        DHTMEM46: 0x00000000,
        DHTMEM47: 0x00000000,
        DHTMEM48: 0x00000000,
        DHTMEM49: 0x00000000,
        DHTMEM50: 0x00000000,
        DHTMEM51: 0x00000000,
        DHTMEM52: 0x00000000,
        DHTMEM53: 0x00000000,
        DHTMEM54: 0x00000000,
        DHTMEM55: 0x00000000,
        DHTMEM56: 0x00000000,
        DHTMEM57: 0x00000000,
        DHTMEM58: 0x00000000,
        DHTMEM59: 0x00000000,
        DHTMEM60: 0x00000000,
        DHTMEM61: 0x00000000,
        DHTMEM62: 0x00000000,
        DHTMEM63: 0x00000000,
        DHTMEM64: 0x00000000,
        DHTMEM65: 0x00000000,
        DHTMEM66: 0x00000000,
        DHTMEM67: 0x00000000,
        DHTMEM68: 0x00000000,
        DHTMEM69: 0x00000000,
        DHTMEM70: 0x00000000,
        DHTMEM71: 0x00000000,
        DHTMEM72: 0x00000000,
        DHTMEM73: 0x00000000,
        DHTMEM74: 0x00000000,
        DHTMEM75: 0x00000000,
        DHTMEM76: 0x00000000,
        DHTMEM77: 0x00000000,
        DHTMEM78: 0x00000000,
        DHTMEM79: 0x00000000,
        DHTMEM80: 0x00000000,
        DHTMEM81: 0x00000000,
        DHTMEM82: 0x00000000,
        DHTMEM83: 0x00000000,
        DHTMEM84: 0x00000000,
        DHTMEM85: 0x00000000,
        DHTMEM86: 0x00000000,
        DHTMEM87: 0x00000000,
        DHTMEM88: 0x00000000,
        DHTMEM89: 0x00000000,
        DHTMEM90: 0x00000000,
        DHTMEM91: 0x00000000,
        DHTMEM92: 0x00000000,
        DHTMEM93: 0x00000000,
        DHTMEM94: 0x00000000,
        DHTMEM95: 0x00000000,
        DHTMEM96: 0x00000000,
        DHTMEM97: 0x00000000,
        DHTMEM98: 0x00000000,
        DHTMEM99: 0x00000000,
        DHTMEM100: 0x00000000,
        DHTMEM101: 0x00000000,
        DHTMEM102: 0x00000000,
        DHTMEM103: 0x00000000,
        HUFFENC_AC00: 0x00000000,
        HUFFENC_AC01: 0x00000000,
        HUFFENC_AC02: 0x00000000,
        HUFFENC_AC03: 0x00000000,
        HUFFENC_AC04: 0x00000000,
        HUFFENC_AC05: 0x00000000,
        HUFFENC_AC06: 0x00000000,
        HUFFENC_AC07: 0x00000000,
        HUFFENC_AC08: 0x00000000,
        HUFFENC_AC09: 0x00000000,
        HUFFENC_AC010: 0x00000000,
        HUFFENC_AC011: 0x00000000,
        HUFFENC_AC012: 0x00000000,
        HUFFENC_AC013: 0x00000000,
        HUFFENC_AC014: 0x00000000,
        HUFFENC_AC015: 0x00000000,
        HUFFENC_AC016: 0x00000000,
        HUFFENC_AC017: 0x00000000,
        HUFFENC_AC018: 0x00000000,
        HUFFENC_AC019: 0x00000000,
        HUFFENC_AC020: 0x00000000,
        HUFFENC_AC021: 0x00000000,
        HUFFENC_AC022: 0x00000000,
        HUFFENC_AC023: 0x00000000,
        HUFFENC_AC024: 0x00000000,
        HUFFENC_AC025: 0x00000000,
        HUFFENC_AC026: 0x00000000,
        HUFFENC_AC027: 0x00000000,
        HUFFENC_AC028: 0x00000000,
        HUFFENC_AC029: 0x00000000,
        HUFFENC_AC030: 0x00000000,
        HUFFENC_AC031: 0x00000000,
        HUFFENC_AC032: 0x00000000,
        HUFFENC_AC033: 0x00000000,
        HUFFENC_AC034: 0x00000000,
        HUFFENC_AC035: 0x00000000,
        HUFFENC_AC036: 0x00000000,
        HUFFENC_AC037: 0x00000000,
        HUFFENC_AC038: 0x00000000,
        HUFFENC_AC039: 0x00000000,
        HUFFENC_AC040: 0x00000000,
        HUFFENC_AC041: 0x00000000,
        HUFFENC_AC042: 0x00000000,
        HUFFENC_AC043: 0x00000000,
        HUFFENC_AC044: 0x00000000,
        HUFFENC_AC045: 0x00000000,
        HUFFENC_AC046: 0x00000000,
        HUFFENC_AC047: 0x00000000,
        HUFFENC_AC048: 0x00000000,
        HUFFENC_AC049: 0x00000000,
        HUFFENC_AC050: 0x00000000,
        HUFFENC_AC051: 0x00000000,
        HUFFENC_AC052: 0x00000000,
        HUFFENC_AC053: 0x00000000,
        HUFFENC_AC054: 0x00000000,
        HUFFENC_AC055: 0x00000000,
        HUFFENC_AC056: 0x00000000,
        HUFFENC_AC057: 0x00000000,
        HUFFENC_AC058: 0x00000000,
        HUFFENC_AC059: 0x00000000,
        HUFFENC_AC060: 0x00000000,
        HUFFENC_AC061: 0x00000000,
        HUFFENC_AC062: 0x00000000,
        HUFFENC_AC063: 0x00000000,
        HUFFENC_AC064: 0x00000000,
        HUFFENC_AC065: 0x00000000,
        HUFFENC_AC066: 0x00000000,
        HUFFENC_AC067: 0x00000000,
        HUFFENC_AC068: 0x00000000,
        HUFFENC_AC069: 0x00000000,
        HUFFENC_AC070: 0x00000000,
        HUFFENC_AC071: 0x00000000,
        HUFFENC_AC072: 0x00000000,
        HUFFENC_AC073: 0x00000000,
        HUFFENC_AC074: 0x00000000,
        HUFFENC_AC075: 0x00000000,
        HUFFENC_AC076: 0x00000000,
        HUFFENC_AC077: 0x00000000,
        HUFFENC_AC078: 0x00000000,
        HUFFENC_AC079: 0x00000000,
        HUFFENC_AC080: 0x00000000,
        HUFFENC_AC081: 0x00000000,
        HUFFENC_AC082: 0x00000000,
        HUFFENC_AC083: 0x00000000,
        HUFFENC_AC084: 0x00000000,
        HUFFENC_AC085: 0x00000000,
        HUFFENC_AC086: 0x00000000,
        HUFFENC_AC087: 0x00000000,
        HUFFENC_AC10: 0x00000000,
        HUFFENC_AC11: 0x00000000,
        HUFFENC_AC12: 0x00000000,
        HUFFENC_AC13: 0x00000000,
        HUFFENC_AC14: 0x00000000,
        HUFFENC_AC15: 0x00000000,
        HUFFENC_AC16: 0x00000000,
        HUFFENC_AC17: 0x00000000,
        HUFFENC_AC18: 0x00000000,
        HUFFENC_AC19: 0x00000000,
        HUFFENC_AC110: 0x00000000,
        HUFFENC_AC111: 0x00000000,
        HUFFENC_AC112: 0x00000000,
        HUFFENC_AC113: 0x00000000,
        HUFFENC_AC114: 0x00000000,
        HUFFENC_AC115: 0x00000000,
        HUFFENC_AC116: 0x00000000,
        HUFFENC_AC117: 0x00000000,
        HUFFENC_AC118: 0x00000000,
        HUFFENC_AC119: 0x00000000,
        HUFFENC_AC120: 0x00000000,
        HUFFENC_AC121: 0x00000000,
        HUFFENC_AC122: 0x00000000,
        HUFFENC_AC123: 0x00000000,
        HUFFENC_AC124: 0x00000000,
        HUFFENC_AC125: 0x00000000,
        HUFFENC_AC126: 0x00000000,
        HUFFENC_AC127: 0x00000000,
        HUFFENC_AC128: 0x00000000,
        HUFFENC_AC129: 0x00000000,
        HUFFENC_AC130: 0x00000000,
        HUFFENC_AC131: 0x00000000,
        HUFFENC_AC132: 0x00000000,
        HUFFENC_AC133: 0x00000000,
        HUFFENC_AC134: 0x00000000,
        HUFFENC_AC135: 0x00000000,
        HUFFENC_AC136: 0x00000000,
        HUFFENC_AC137: 0x00000000,
        HUFFENC_AC138: 0x00000000,
        HUFFENC_AC139: 0x00000000,
        HUFFENC_AC140: 0x00000000,
        HUFFENC_AC141: 0x00000000,
        HUFFENC_AC142: 0x00000000,
        HUFFENC_AC143: 0x00000000,
        HUFFENC_AC144: 0x00000000,
        HUFFENC_AC145: 0x00000000,
        HUFFENC_AC146: 0x00000000,
        HUFFENC_AC147: 0x00000000,
        HUFFENC_AC148: 0x00000000,
        HUFFENC_AC149: 0x00000000,
        HUFFENC_AC150: 0x00000000,
        HUFFENC_AC151: 0x00000000,
        HUFFENC_AC152: 0x00000000,
        HUFFENC_AC153: 0x00000000,
        HUFFENC_AC154: 0x00000000,
        HUFFENC_AC155: 0x00000000,
        HUFFENC_AC156: 0x00000000,
        HUFFENC_AC157: 0x00000000,
        HUFFENC_AC158: 0x00000000,
        HUFFENC_AC159: 0x00000000,
        HUFFENC_AC160: 0x00000000,
        HUFFENC_AC161: 0x00000000,
        HUFFENC_AC162: 0x00000000,
        HUFFENC_AC163: 0x00000000,
        HUFFENC_AC164: 0x00000000,
        HUFFENC_AC165: 0x00000000,
        HUFFENC_AC166: 0x00000000,
        HUFFENC_AC167: 0x00000000,
        HUFFENC_AC168: 0x00000000,
        HUFFENC_AC169: 0x00000000,
        HUFFENC_AC170: 0x00000000,
        HUFFENC_AC171: 0x00000000,
        HUFFENC_AC172: 0x00000000,
        HUFFENC_AC173: 0x00000000,
        HUFFENC_AC174: 0x00000000,
        HUFFENC_AC175: 0x00000000,
        HUFFENC_AC176: 0x00000000,
        HUFFENC_AC177: 0x00000000,
        HUFFENC_AC178: 0x00000000,
        HUFFENC_AC179: 0x00000000,
        HUFFENC_AC180: 0x00000000,
        HUFFENC_AC181: 0x00000000,
        HUFFENC_AC182: 0x00000000,
        HUFFENC_AC183: 0x00000000,
        HUFFENC_AC184: 0x00000000,
        HUFFENC_AC185: 0x00000000,
        HUFFENC_AC186: 0x00000000,
        HUFFENC_AC187: 0x00000000,
        HUFFENC_DC00: 0x00000000,
        HUFFENC_DC01: 0x00000000,
        HUFFENC_DC02: 0x00000000,
        HUFFENC_DC03: 0x00000000,
        HUFFENC_DC04: 0x00000000,
        HUFFENC_DC05: 0x00000000,
        HUFFENC_DC06: 0x00000000,
        HUFFENC_DC07: 0x00000000,
        HUFFENC_DC10: 0x00000000,
        HUFFENC_DC11: 0x00000000,
        HUFFENC_DC12: 0x00000000,
        HUFFENC_DC13: 0x00000000,
        HUFFENC_DC14: 0x00000000,
        HUFFENC_DC15: 0x00000000,
        HUFFENC_DC16: 0x00000000,
        HUFFENC_DC17: 0x00000000,
    };

    #[cfg(not(feature = "nosync"))]
    #[allow(renamed_and_removed_lints)]
    #[allow(private_no_mangle_statics)]
    #[no_mangle]
    static mut JPEG_TAKEN: bool = false;

    /// Safe access to JPEG
    ///
    /// This function returns `Some(Instance)` if this instance is not
    /// currently taken, and `None` if it is. This ensures that if you
    /// do get `Some(Instance)`, you are ensured unique access to
    /// the peripheral and there cannot be data races (unless other
    /// code uses `unsafe`, of course). You can then pass the
    /// `Instance` around to other functions as required. When you're
    /// done with it, you can call `release(instance)` to return it.
    ///
    /// `Instance` itself dereferences to a `RegisterBlock`, which
    /// provides access to the peripheral's registers.
    #[cfg(not(feature = "nosync"))]
    #[inline]
    pub fn take() -> Option<Instance> {
        external_cortex_m::interrupt::free(|_| unsafe {
            if JPEG_TAKEN {
                None
            } else {
                JPEG_TAKEN = true;
                Some(INSTANCE)
            }
        })
    }

    /// Release exclusive access to JPEG
    ///
    /// This function allows you to return an `Instance` so that it
    /// is available to `take()` again. This function will panic if
    /// you return a different `Instance` or if this instance is not
    /// already taken.
    #[cfg(not(feature = "nosync"))]
    #[inline]
    pub fn release(inst: Instance) {
        external_cortex_m::interrupt::free(|_| unsafe {
            if JPEG_TAKEN && inst.addr == INSTANCE.addr {
                JPEG_TAKEN = false;
            } else {
                panic!("Released a peripheral which was not taken");
            }
        });
    }

    /// Unsafely steal JPEG
    ///
    /// This function is similar to take() but forcibly takes the
    /// Instance, marking it as taken irregardless of its previous
    /// state.
    #[cfg(not(feature = "nosync"))]
    #[inline]
    pub unsafe fn steal() -> Instance {
        JPEG_TAKEN = true;
        INSTANCE
    }
}

/// Raw pointer to JPEG
///
/// Dereferencing this is unsafe because you are not ensured unique
/// access to the peripheral, so you may encounter data races with
/// other users of this peripheral. It is up to you to ensure you
/// will not cause data races.
///
/// This constant is provided for ease of use in unsafe code: you can
/// simply call for example `write_reg!(gpio, GPIOA, ODR, 1);`.
pub const JPEG: *const RegisterBlock = 0x50051000 as *const _;
